[{"C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\pages\\HomePage.tsx":"1","C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\components\\Movie.tsx":"2","C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\services\\movie.ts":"3"},{"size":2160,"mtime":1610057293635,"results":"4","hashOfConfig":"5"},{"size":3785,"mtime":1610057083175,"results":"6","hashOfConfig":"5"},{"size":2811,"mtime":1610058050102,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ugme9g",{"filePath":"10","messages":"11","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\pages\\HomePage.tsx",["15"],"C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\components\\Movie.tsx",["16","17","18","19","20","21"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport loader from \"../img/loader.gif\";\r\nimport clockIcon from \"../img/clock.png\";\r\nimport starIcon from \"../img/star.png\";\r\nimport { getMovieObject } from '../services/movie';\r\n\r\nimport \"./movie-details-style.css\"\r\n\r\ntype TParams = { id: string };\r\n\r\nexport function Movie({ match }: RouteComponentProps<TParams>) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [movie, setMovie] = useState({\r\n    released: \"\",\r\n    title: \"\",\r\n    originalTitle: \"\",\r\n    overview: \"\",\r\n    runtime: 0,\r\n    country: \"\",\r\n    trailer: \"\",\r\n    homepage: \"\",\r\n    popularity: 0,\r\n    poster: \"\",\r\n    actors: [] as any,\r\n    genres: [] as any,\r\n    traktId: \"\",\r\n    coeff: 0,\r\n    length: \"\",\r\n    rating: 0,\r\n    ratingVotes: 0,\r\n    trailerLink: \"\"\r\n  });\r\n  \r\n  useEffect(() => {\r\n    getMovieObject(match.params.id).then(movie => {\r\n      //movie.ids.imdb\r\n      setMovie(movie);\r\n      console.log(\"Movie \", movie)\r\n      setIsLoading(false);\r\n    });\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? \r\n        <div className=\"loader\">\r\n          <img src={loader} className=\"loader-gif\" alt=\"loading\"/>\r\n        </div> :\r\n        <div className=\"movie\">\r\n          <h1>{movie.title}</h1>\r\n          <div className=\"movie-details-container\">\r\n            <img className=\"movie-poster\" src={\"https://image.tmdb.org/t/p/w185/\" + movie.poster}/>\r\n            <div className=\"movie-details\">\r\n              <div className=\"movie-details__runtime\">\r\n                <img className=\"movie-details__clock\" src={clockIcon}/> \r\n                <span>&nbsp;{movie.length}</span>\r\n                <img className=\"movie-details__star\" src={starIcon}/> \r\n                <span>&nbsp;{movie.rating}&nbsp;&nbsp;({movie.ratingVotes} votes)</span>\r\n              </div>\r\n              <div className=\"movie-details__genres\">\r\n                <p className=\"movie-details__genre grey\">Genres:</p>\r\n                {movie.genres.map((genre: string) => {\r\n                  return (\r\n                    <p className=\"movie-details__genre\">\r\n                      {genre}\r\n                    </p>\r\n                  )\r\n                })}\r\n              </div>\r\n              <p className=\"movie-details__overview p\">\r\n                <span className=\"grey\">Overview:</span> \r\n                &nbsp;{movie.overview}\r\n              </p>\r\n              <p className=\"movie-details__overview p\">\r\n                <span className=\"grey\">Released:</span> \r\n                &nbsp;{new Intl.DateTimeFormat('en-US').format(new Date(movie.released))}\r\n              </p>\r\n              {movie.trailerLink && \r\n                <p className=\"movie-details__overview p\">\r\n                  <span className=\"grey\">Trailer:</span> \r\n                  &nbsp;<a target=\"_blank\" href={movie.trailerLink}>{movie.trailerLink}</a>\r\n                </p>\r\n              }\r\n            </div>\r\n          </div>\r\n          <h2 className=\"movie-cast-title\">Cast</h2>\r\n          <div className=\"actor\">\r\n            {movie.actors.map((actor: any )=> {\r\n              return (     \r\n                <>\r\n                {actor.image && \r\n                  <div className=\"actor-details-container\">\r\n                    <div className=\"actor-details\">   \r\n                      <img className=\"actor-details__image\" src={\"https://image.tmdb.org/t/p/w185/\" + actor.image} />\r\n                      <p>{actor.name}</p>\r\n                      <h5>as</h5>\r\n                      <p>{actor.character}</p>\r\n                    </div>     \r\n                  </div>\r\n                }\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}","C:\\Users\\paula\\Desktop\\Fimfinity\\filmfinity\\front\\src\\services\\movie.ts",[],{"ruleId":"22","severity":1,"message":"23","line":45,"column":6,"nodeType":"24","endLine":45,"endColumn":14,"suggestions":"25"},{"ruleId":"26","severity":1,"message":"27","line":2,"column":10,"nodeType":"28","messageId":"29","endLine":2,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":53,"column":13,"nodeType":"32","endLine":53,"endColumn":100},{"ruleId":"30","severity":1,"message":"31","line":56,"column":17,"nodeType":"32","endLine":56,"endColumn":72},{"ruleId":"30","severity":1,"message":"31","line":58,"column":17,"nodeType":"32","endLine":58,"endColumn":70},{"ruleId":"33","severity":1,"message":"34","line":82,"column":28,"nodeType":"35","endLine":82,"endColumn":43},{"ruleId":"30","severity":1,"message":"31","line":95,"column":23,"nodeType":"32","endLine":95,"endColumn":118},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userToken'. Either include it or remove the dependency array.","ArrayExpression",["36"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"37","fix":"38"},"Update the dependencies array to be: [userId, userToken]",{"range":"39","text":"40"},[1656,1664],"[userId, userToken]"]